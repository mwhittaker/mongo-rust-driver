bson_t * bson_new (void);
bson_t * bson_new_from_json (const uint8_t *data, ssize_t len, bson_error_t *error);
bool bson_init_from_json (bson_t *bson, const char *data, ssize_t len, bson_error_t *error);
bool bson_init_static (bson_t *b, const uint8_t *data, size_t length);
void bson_init (bson_t *b);
void bson_reinit (bson_t *b);
bson_t * bson_new_from_data (const uint8_t *data, size_t length);
bson_t * bson_new_from_buffer (uint8_t **buf, size_t *buf_len, bson_realloc_func realloc_func, void *realloc_func_ctx);
bson_t * bson_sized_new (size_t size);
bson_t * bson_copy (const bson_t *bson);
void bson_copy_to (const bson_t *src, bson_t *dst);
void bson_copy_to_excluding (const bson_t *src, bson_t *dst, const char *first_exclude, ...) BSON_GNUC_NULL_TERMINATED;
void bson_destroy (bson_t *bson);
uint8_t * bson_destroy_with_steal (bson_t *bson, bool steal, uint32_t *length);
const uint8_t * bson_get_data (const bson_t *bson); 
uint32_t bson_count_keys (const bson_t *bson); 
bool bson_has_field (const bson_t *bson, const char *key);
int bson_compare (const bson_t *bson, const bson_t *other);
bool bson_equal (const bson_t *bson, const bson_t *other);
bool bson_validate (const bson_t *bson, bson_validate_flags_t flags, size_t *offset);
char * bson_as_json (const bson_t *bson, size_t *length); 
char * bson_array_as_json (const bson_t *bson, size_t *length);
bool bson_append_value (bson_t *bson, const char *key, int key_length, const bson_value_t *value);
bool bson_append_array (bson_t *bson, const char *key, int key_length, const bson_t *array); 
bool bson_append_binary (bson_t *bson, const char *key, int key_length, bson_subtype_t subtype, const uint8_t *binary, uint32_t length);
bool bson_append_bool (bson_t *bson, const char *key, int key_length, bool value); 
bool bson_append_code (bson_t *bson, const char *key, int key_length, const char *javascript);
bool bson_append_code_with_scope (bson_t *bson, const char *key, int key_length, const char *javascript, const bson_t *scope); 
bool bson_append_dbpointer (bson_t *bson, const char *key, int key_length, const char *collection, const bson_oid_t *oid); 
bool bson_append_double (bson_t *bson, const char *key, int key_length, double value);
bool bson_append_document (bson_t *bson, const char *key, int key_length, const bson_t *value);
bool bson_append_document_begin (bson_t *bson, const char *key, int key_length, bson_t *child);
bool bson_append_document_end (bson_t *bson, bson_t *child); 
bool bson_append_array_begin (bson_t *bson, const char *key, int key_length, bson_t *child);
bool bson_append_array_end (bson_t *bson, bson_t *child);
bool bson_append_int32 (bson_t *bson, const char *key, int key_length, int32_t value);
bool bson_append_int64 (bson_t *bson, const char *key, int key_length, int64_t value);
bool bson_append_iter (bson_t *bson, const char *key, int key_length, const bson_iter_t *iter);
bool bson_append_minkey (bson_t *bson, const char *key, int key_length);
bool bson_append_maxkey (bson_t *bson, const char *key, int key_length); 
bool bson_append_null (bson_t *bson, const char *key, int key_length);
bool bson_append_oid (bson_t *bson, const char *key, int key_length, const bson_oid_t *oid); 
bool bson_append_regex (bson_t *bson, const char *key, int key_length, const char *regex, const char *options);
bool bson_append_utf8 (bson_t *bson, const char *key, int key_length, const char *value, int length);
bool bson_append_symbol (bson_t *bson, const char *key, int key_length, const char *value, int length);
bool bson_append_time_t (bson_t *bson, const char *key, int key_length, time_t value);
bool bson_append_timeval (bson_t *bson, const char *key, int key_length, struct timeval *value);
bool bson_append_date_time (bson_t *bson, const char *key, int key_length, int64_t value);
bool bson_append_now_utc (bson_t *bson, const char *key, int key_length);
bool bson_append_timestamp (bson_t *bson, const char *key, int key_length, uint32_t timestamp, uint32_t increment);
bool bson_append_undefined (bson_t *bson, const char *key, int key_length);
bool bson_concat (bson_t *dst, const bson_t *src);
